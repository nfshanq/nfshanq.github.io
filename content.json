{"meta":{"title":"Xin Yu's Notes","subtitle":"","description":"","author":"Xin Yu","url":"https://nfshanq.github.io","root":"/"},"pages":[{"title":"tags","date":"2021-12-19T00:52:26.000Z","updated":"2021-12-26T08:33:04.258Z","comments":true,"path":"tags/index.html","permalink":"https://nfshanq.github.io/tags/index.html","excerpt":"","text":"virt Smart NIC"},{"title":"categories","date":"2021-12-19T00:45:12.000Z","updated":"2021-12-26T08:30:21.509Z","comments":true,"path":"categories/index.html","permalink":"https://nfshanq.github.io/categories/index.html","excerpt":"","text":"Virt Linux Kubernetes Smart NIC"},{"title":"books","date":"2021-12-19T00:45:12.000Z","updated":"2021-12-26T08:48:33.038Z","comments":true,"path":"books/index.html","permalink":"https://nfshanq.github.io/books/index.html","excerpt":"","text":"NetDevOps入门与实践"},{"title":"port rdnbrd.service from cumulus os to bluefield-2","date":"2021-12-30T08:52:26.000Z","updated":"2021-12-30T09:01:01.996Z","comments":true,"path":"private/mellanox/bluefield/rdnbrd.html","permalink":"https://nfshanq.github.io/private/mellanox/bluefield/rdnbrd.html","excerpt":"","text":"rdnbrd.service123456789root@bf-13:/home/ubuntu# systemctl status rdnbrd.service● rdnbrd.service - Cumulus Linux Redistribute Neighbor Service Loaded: loaded (/lib/systemd/system/rdnbrd.service; disabled; vendor preset: enabled) Active: active (running) since Mon 2021-12-27 06:02:32 UTC; 3 days ago Main PID: 3216758 (python) Tasks: 4 (limit: 19083) Memory: 35.6M CGroup: /system.slice/rdnbrd.service └─3216758 /usr/bin/python /usr/sbin/rdnbrd -d port python2 libslib list1234/usr/lib/python2.7/dist-packages/ipaddr.py/usr/lib/python2.7/dist-packages/daemon/usr/lib/python2.7/dist-packages/nlmanager/usr/lib/python2.7/dist-packages/lockfile main code1/usr/sbin/rdnbrd scp from cumulus os123456cd /usr/lib/python2.7/dist-packages/scp -r cumulus@&lt;cumuls-host&gt;:/usr/lib/python2.7/dist-packages/ipaddr.py .scp -r cumulus@&lt;cumuls-host&gt;:/usr/lib/python2.7/dist-packages/daemon .scp -r cumulus@&lt;cumuls-host&gt;:/usr/lib/python2.7/dist-packages/nlmanager .scp -r cumulus@&lt;cumuls-host&gt;:/usr/lib/python2.7/dist-packages/lockfile . 12cd /usr/sbin/scp -r cumulus@&lt;cumuls-host&gt;:/usr/sbin/rdnbrd /usr/sbin/rdnbrd port systemd and config filesystemd file12345678910111213141516171819cat &lt;&lt; EOF &gt; /lib/systemd/system/rdnbrd.service[Unit]Description=Cumulus Linux Redistribute Neighbor ServiceAfter=networking.service syslog.service[Service]EnvironmentFile=/etc/rdnbrd.confType=simpleStartLimitInterval=3mStartLimitBurst=3TimeoutSec=1mRestartSec=5Restart=alwaysExecStart=/usr/bin/python /usr/sbin/rdnbrd -d[Install]WantedBy=network-online.targetEOF config file123456789101112131415161718192021222324252627282930cat &lt;&lt;EOF &gt; /etc/rdnbrd.conf# syslog logging level CRITICAL, ERROR, WARNING, INFO, or DEBUGloglevel = INFO# TX an ARP request to known hosts every keepalive secondskeepalive = 1# If a host does not send an ARP reply for holdtime consider the host downholdtime = 3# Install /32 routes for each host into this tableroute_table = 10# Uncomment to enable ARP debugs on specific interfaces.# Note that ARP debugs can be very chatty.# debug_arp = swp1 swp2 swp3 br1# If we already know the MAC for a host, unicast the ARP request. This is# unusual for ARP (why ARP if you know the destination MAC) but we will be# using ARP as a keepalive mechanism and do not want to broadcast so many ARPs# if we do not have to. If a host cannot handle a unicasted ARP request, set# the following option to False.## Unicasting ARP requests is common practice (in some scenarios) for other# networking operating systems so it is unlikely that you will need to set# this to False.unicast_arp_requests = TrueEOF modify codeline number: 1124from: 12sed -n &#x27;1124p&#x27; /usr/sbin/rdnbrd for ifindex in (get_ifindex(&#x27;lo&#x27;), get_ifindex(&#x27;eth0&#x27;)): to: 1for ifindex in (get_ifindex(&#x27;lo&#x27;), get_ifindex(&#x27;oob_net0&#x27;),get_ifindex(&#x27;tmfifo_net0&#x27;)): sed: 1sed -i.bak &quot;1124c\\ for ifindex in (get_ifindex(&#x27;lo&#x27;), get_ifindex(&#x27;oob_net0&#x27;),get_ifindex(&#x27;tmfifo_net0&#x27;)):&quot; /usr/sbin/rdnbrd start service123systemctl daemon-reloadsystemctl enable rdnbrd.servicesystemctl start rdnbrd.service"}],"posts":[{"title":"OpenWRT VxLAN","slug":"Linux/openwrt/vxlan","date":"2022-02-07T21:07:50.000Z","updated":"2022-02-09T02:15:14.205Z","comments":true,"path":"2022/02/07/Linux/openwrt/vxlan/","link":"","permalink":"https://nfshanq.github.io/2022/02/07/Linux/openwrt/vxlan/","excerpt":"","text":"1. Topology GL.inet MT1300 is MT7621 chip 2. device config2.1 QFX5100 config2.1.1 interface config1234567891011# L2 interface set xe-0/0/0 unit 0 family ethernet-switching interface-mode accessset xe-0/0/0 unit 0 family ethernet-switching vlan members vlan-vxlan10# connect L2 switchset xe-0/0/37 unit 0 family ethernet-switching interface-mode trunkset xe-0/0/37 unit 0 family ethernet-switching vlan members vlan81# vtep source interfaceset irb unit 81 family inet address 11.81.1.1/24set lo0 unit 0 family inet address 11.1.1.1/32 vlan-vxlan10 is vxlan vlan 2.1.2 protocol config1234567891011set routing-options router-id 11.1.1.1set routing-options autonomous-system 65000set protocols bgp group evpn type internalset protocols bgp group evpn local-address 11.1.1.1set protocols bgp group evpn family evpn signalingset protocols bgp group evpn allow 11.81.1.0/24set protocols bgp group evpn allow 11.82.1.0/24set protocols evpn encapsulation vxlanset protocols evpn vni-options vni 10 vrf-target target:65000:10set protocols evpn extended-vni-list 10 2.1.3 switch and vlan config123456789set switch-options vtep-source-interface lo0.0set switch-options route-distinguisher 11.1.1.1:10set switch-options vrf-target target:65000:10set vlans vlan-vxlan10 vlan-id 10set vlans vlan-vxlan10 vxlan vni 10set vlans vlan-vxlan10 vxlan ingress-node-replicationset vlans vlan81 description &quot;openwrt test&quot;set vlans vlan81 vlan-id 81set vlans vlan81 l3-interface irb.81 2.2 OpenWRT config2.2.1 FRR config12345678910111213router bgp 65000 bgp router-id 11.81.1.2 neighbor evpn peer-group neighbor evpn remote-as internal neighbor evpn update-source wan neighbor 11.1.1.1 peer-group evpn ! address-family l2vpn evpn neighbor evpn activate advertise-all-vni advertise ipv4 unicast exit-address-family 2.2.2 vxlan interface configThe OpenWRT config (/etc/config/network) must need vxlan peeraddr. ref: https://openwrt.org/docs/guide-user/network/tunneling_interface_protocols so, use hotplug to add the vxlan interface. 123456789101112131415root@OpenWrt:~# cat /etc/hotplug.d/iface/50-vxlan#!/bin/sh[ &quot;$ACTION&quot; == &quot;ifup&quot; ] &amp;&amp; [ &quot;$INTERFACE&quot; == &quot;wan&quot; ] &amp;&amp; &#123;WAN_IFNAME=&#x27;wan@eth0&#x27;WAN_IP=&quot;$(ip -br a | grep &quot;$WAN_IFNAME&quot; | grep -Eo &#x27;[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;&#x27;)&quot;ip link del vxlan1ip link add vxlan1 type vxlan id 10 local $&#123;WAN_IP&#125; dstport 4789ip link set vxlan1 master br-lanip link set vxlan1 up&#125; 2.2.3 firewall configThe OpenWRT default firewall is disable the VxLAN traffic. so we need add the firewall rule. JUNOS will use 4789 to connect the VxLAN. 1234567# … in the /etc/config/firewallconfig rule option name Allow-VxLAN option src wan option dest_port 4789 option proto udp option target ACCEPT if we need another BGP speaker to connect active. we need to add the BGP 179(TCP) port in the firewall rule. In my use case, the JUNOS BGP speaker is passive mode. 12345678# … in the /etc/config/firewallconfig rule option name Allow-BGP option src wan option dest_port 179 option proto tcp option target ACCEPT 3. vxlan evpn status3.1 QFX51003.1.1 BGP (control plane)BGP peer is evpn. 123456789101112lab@qfx5100-48s-6q&gt; show bgp summaryThreading mode: BGP I/OGroups: 1 Peers: 1 Down peers: 0Unconfigured peers: 1Table Tot Paths Act Paths Suppressed History Damp State Pendingbgp.evpn.0 2 2 0 0 0 0Peer AS InPkt OutPkt OutQ Flaps Last Up/Dwn State|#Active/Received/Accepted/Damped...11.81.1.2 65000 80 70 0 0 28:40 Establ __default_evpn__.evpn.0: 0/0/0/0 bgp.evpn.0: 2/2/2/0 default-switch.evpn.0: 2/2/2/0 BGP evpn NLRI 123456789101112131415161718192021222324252627lab@qfx5100-48s-6q&gt; show route table bgp.evpn.0bgp.evpn.0: 6 destinations, 6 routes (6 active, 0 holddown, 0 hidden)+ = Active Route, - = Last Active, * = Both2:11.1.1.1:10::10::e4:43:4b:f6:c5:56/304 MAC/IP *[EVPN/170] 00:39:07 Indirect2:11.81.1.2:2::0::e4:43:4b:f6:c5:75/304 MAC/IP *[BGP/170] 00:45:24, localpref 100 AS path: I, validation-state: unverified &gt; to 11.81.1.2 via irb.812:11.1.1.1:10::10::e4:43:4b:f6:c5:56::192.168.8.100/304 MAC/IP *[EVPN/170] 00:19:13 Indirect2:11.81.1.2:2::0::e4:43:4b:f6:c5:75::192.168.8.10/304 MAC/IP *[BGP/170] 00:00:19, localpref 100 AS path: I, validation-state: unverified &gt; to 11.81.1.2 via irb.813:11.1.1.1:10::10::11.1.1.1/248 IM *[EVPN/170] 00:46:26 Indirect3:11.81.1.2:2::0::11.81.1.2/248 IM *[BGP/170] 00:45:24, localpref 100 AS path: I, validation-state: unverified &gt; to 11.81.1.2 via irb.81 One evpn BGP NLRI extensive information. 12345678910111213141516171819202122232425262728293031323334353637lab@qfx5100-48s-6q&gt; show route table bgp.evpn.0 extensive evpn-mac-address e4:43:4b:f6:c5:75bgp.evpn.0: 5 destinations, 5 routes (5 active, 0 holddown, 0 hidden)2:11.81.1.2:2::0::e4:43:4b:f6:c5:75/304 MAC/IP (1 entry, 0 announced) *BGP Preference: 170/-101 Route Distinguisher: 11.81.1.2:2 Next hop type: Indirect, Next hop index: 0 Address: 0xccd60b0 Next-hop reference count: 4 Source: 11.81.1.2 Protocol next hop: 11.81.1.2 Indirect next hop: 0x2 no-forward INH Session ID: 0x0 State: &lt;Active Int Ext&gt; Local AS: 65000 Peer AS: 65000 Age: 17:50:15 Metric2: 0 Validation State: unverified Task: BGP_65000.11.81.1.2+43211 AS path: I Communities: target:65000:10 encapsulation:vxlan(0x8) Import Accepted Route Label: 10 ESI: 00:00:00:00:00:00:00:00:00:00 Localpref: 100 Router ID: 11.81.1.2 Secondary Tables: default-switch.evpn.0 Indirect next hops: 1 Protocol next hop: 11.81.1.2 Indirect next hop: 0x2 no-forward INH Session ID: 0x0 Indirect path forwarding next hops: 1 Next hop type: Router Next hop: 11.81.1.2 via irb.81 Session Id: 0x0 11.81.1.0/24 Originating RIB: inet.0 Node path count: 1 Forwarding nexthops: 1 Next hop type: Interface Nexthop: via irb.81 3.1.2 forwarding planemac-ip table 12345678910111213&#123;master:0&#125;lab@qfx5100-48s-6q&gt; show ethernet-switching mac-ip-tableMAC IP flags (S - Static, D - Dynamic, L - Local , R - Remote, Lp - Local Proxy, Rp - Remote Proxy, K - Kernel, RT - Dest Route, AD - Advt to remote, RE - Re-ARP/ND, RO - Router, OV - Override) Routing instance : default-switch Bridging domain : vlan-vxlan10 IP MAC Flags Logical Active address address Interface source 192.168.8.100 e4:43:4b:f6:c5:56 DL,K,AD xe-0/0/0.0 192.168.8.10 e4:43:4b:f6:c5:75 DR,K vtep.32769 11.81.1.2 MAC table: 12345678910111213141516&#123;master:0&#125;lab@qfx5100-48s-6q&gt; show ethernet-switching tableMAC flags (S - static MAC, D - dynamic MAC, L - locally learned, P - Persistent static SE - statistics enabled, NM - non configured MAC, R - remote PE MAC, O - ovsdb MAC)Ethernet switching table : 3 entries, 3 learnedRouting instance : default-switch Vlan MAC MAC Logical Active name address flags interface source vlan-vxlan10 e4:43:4b:f6:c5:56 D xe-0/0/0.0 vlan-vxlan10 e4:43:4b:f6:c5:75 D vtep.32769 11.81.1.2 vlan81 94:83:c4:16:51:44 D xe-0/0/37.0&#123;master:0&#125; forwarding-table detail: 12345678910111213141516171819202122&#123;master:0&#125;lab@qfx5100-48s-6q&gt; show route forwarding-table family ethernet-switching matching e4:43:4b:f6:c5:75/48 extensiveRouting table: default-switch.evpn-vxlan [Index 7]Bridging domain: vlan-vxlan10.evpn-vxlan [Index 3]VPLS:Enabled protocols: Bridging, ACKed by all peers, EVPN VXLAN,Destination: e4:43:4b:f6:c5:75/48 Learn VLAN: 0 Route type: user Route reference: 0 Route interface-index: 566 Multicast RPF nh index: 0 P2mpidx: 0 IFL generation: 131 Epoch: 0 Sequence Number: 0 Learn Mask: 0x4000000000000000000000000000000000000000 L2 Flags: control_dyn Flags: sent to PFE Nexthop: Next-hop type: composite Index: 1742 Reference: 5 Next-hop type: indirect Index: 524286 Reference: 3 Nexthop: 11.81.1.2 Next-hop type: unicast Index: 1741 Reference: 4 Next-hop interface: xe-0/0/37.0 3.2 OpenWRT3.2.1 BGPBGP peer 12345678910111213# frr commandOpenWrt# show bgp l2vpn evpn summBGP router identifier 11.81.1.2, local AS number 65000 vrf-id 0BGP table version 0RIB entries 3, using 384 bytes of memoryPeers 1, using 10896 bytes of memoryPeer groups 1, using 32 bytes of memoryNeighbor V AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down State/PfxRcd PfxSnt11.1.1.1 4 65000 3090 3048 0 0 0 17:27:52 3 3Total number of neighbors 1 evpn BGP NLRI 123456789101112131415161718192021222324252627282930313233343536# frr commandOpenWrt# show bgp l2vpn evpnBGP table version is 15, local router ID is 11.81.1.2Status codes: s suppressed, d damped, h history, * valid, &gt; best, i - internalOrigin codes: i - IGP, e - EGP, ? - incompleteEVPN type-1 prefix: [1]:[ESI]:[EthTag]:[IPlen]:[VTEP-IP]EVPN type-2 prefix: [2]:[EthTag]:[MAClen]:[MAC]:[IPlen]:[IP]EVPN type-3 prefix: [3]:[EthTag]:[IPlen]:[OrigIP]EVPN type-4 prefix: [4]:[ESI]:[IPlen]:[OrigIP]EVPN type-5 prefix: [5]:[EthTag]:[IPlen]:[IP] Network Next Hop Metric LocPrf Weight PathRoute Distinguisher: 11.1.1.1:10*&gt;i[2]:[10]:[48]:[e4:43:4b:f6:c5:56] 11.1.1.1 100 0 i RT:65000:10 ET:8*&gt;i[2]:[10]:[48]:[e4:43:4b:f6:c5:56]:[32]:[192.168.8.100] 11.1.1.1 100 0 i RT:65000:10 ET:8*&gt;i[3]:[10]:[32]:[11.1.1.1] 11.1.1.1 100 0 i RT:65000:10 ET:8Route Distinguisher: 11.81.1.2:2*&gt; [2]:[0]:[48]:[e4:43:4b:f6:c5:75] 11.81.1.2 32768 i ET:8 RT:65000:10*&gt; [2]:[0]:[48]:[e4:43:4b:f6:c5:75]:[32]:[192.168.8.10] 11.81.1.2 32768 i ET:8 RT:65000:10*&gt; [3]:[0]:[32]:[11.81.1.2] 11.81.1.2 32768 i ET:8 RT:65000:10Displayed 6 out of 6 total prefixes evpn BGP advertised-routes 123456789101112131415161718# frr commandOpenWrt# show bgp l2vpn evpn neighbors 11.1.1.1 advertised-routesBGP table version is 0, local router ID is 11.81.1.2Default local pref 100, local AS 65000Status codes: s suppressed, d damped, h history, * valid, &gt; best, i - internalOrigin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight PathRoute Distinguisher: 11.81.1.2:2*&gt; [2]:[0]:[48]:[e4:43:4b:f6:c5:75] 100 32768 i*&gt; [2]:[0]:[48]:[e4:43:4b:f6:c5:75]:[32]:[192.168.8.10] 100 32768 i*&gt; [3]:[0]:[32]:[11.81.1.2] 100 32768 iTotal number of prefixes 3 3.2.2 Linux forwarding planebridge fdb 1234567891011121314151617# linux commandroot@OpenWrt:~# bridge fdb | grep -E &#x27;vxlan|wan|lan1&#x27;e4:43:4b:f6:c5:75 dev lan1 master br-lan94:83:c4:16:51:45 dev lan1 vlan 1 master br-lan permanent94:83:c4:16:51:45 dev lan1 master br-lan permanente4:43:4b:f6:c5:75 dev lan1 vlan 1 selfc0:42:d0:08:9a:80 dev wan vlan 1 self1c:9c:8c:67:c3:44 dev wan vlan 1 self1c:9c:8c:68:e4:c0 dev wan vlan 1 selfe4:43:4b:f6:c5:56 dev vxlan1 vlan 1 extern_learn master br-lane4:43:4b:f6:c5:56 dev vxlan1 extern_learn master br-lan3e:dd:f3:a4:65:2b dev vxlan1 vlan 1 master br-lan permanent3e:dd:f3:a4:65:2b dev vxlan1 master br-lan permanent00:00:00:00:00:00 dev vxlan1 dst 11.1.1.1 self permanente4:43:4b:f6:c5:56 dev vxlan1 dst 11.1.1.1 self extern_learn33:33:00:00:00:01 dev wlan1 self permanent33:33:00:00:00:02 dev wlan1 self permanent 00:00:00:00:00:00 dev vxlan1 dst 11.1.1.1 self permanent. is add by /lib/netifd/proto/vxlan.sh vxlan interface: 12345root@OpenWrt:~# ip -d link show vxlan18: vxlan1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-lan state UNKNOWN mode DEFAULT group default qlen 1000 link/ether 3e:dd:f3:a4:65:2b brd ff:ff:ff:ff:ff:ff promiscuity 1 minmtu 68 maxmtu 65535 vxlan id 10 local 11.81.1.2 srcport 0 0 dstport 4789 ttl auto ageing 300 udpcsum noudp6zerocsumtx noudp6zerocsumrx bridge_slave state forwarding priority 32 cost 100 hairpin off guard off root_block off fastleave off learning on flood on port_id 0x8003 port_no 0x3 designated_port 32771 designated_cost 0 designated_bridge 7fff.94:83:C4:16:51:45 designated_root 7fff.94:83:C4:16:51:45 hold_timer 0.00 message_age_timer 0.00 forward_delay_timer 0.00 topology_change_ack 0 config_pending 0 proxy_arp off proxy_arp_wifi off mcast_router 1 mcast_fast_leave off mcast_flood on mcast_to_unicast off neigh_suppress off group_fwd_mask 0 group_fwd_mask_str 0x0 vlan_tunnel off isolated off addrgenmode eui64 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 linux bridge: 12345root@OpenWrt:~# brctl showbridge name bridge id STP enabled interfacesbr-lan 7fff.9483c4165145 no lan2 vxlan1 lan1 4. Throughput4.1 Bidirection(1450 sizes) 4.2 One direction(1450 sizes) 4.3 Bidirection(256 sizes) 4.4 One direction(256 sizes)","categories":[],"tags":[{"name":"OpenWRT","slug":"OpenWRT","permalink":"https://nfshanq.github.io/tags/OpenWRT/"}]},{"title":"switch os upgrade with onie","slug":"mellanox/switch/os-upgrade","date":"2022-01-13T03:21:03.000Z","updated":"2022-01-13T01:39:39.809Z","comments":true,"path":"2022/01/13/mellanox/switch/os-upgrade/","link":"","permalink":"https://nfshanq.github.io/2022/01/13/mellanox/switch/os-upgrade/","excerpt":"","text":"prepareuse console cable to connect the switchif we don’t have the ZTP environment. we need use console port to install the switch os. and we need a network cable to connect the mgmt interface. switch the next boot to ONIEcheck the grub menuentry and switch to onie1234567grep -i &quot;menuentry &#x27;&quot; /boot/grub/grub.cfg|sed -r &quot;s|--class .*$||g&quot;|nl -v 0 0 menuentry &#x27;Cumulus-Linux GNU/Linux&#x27; 1 menuentry &#x27;Cumulus-Linux GNU/Linux, with Linux 4.19.0-cl-1-amd64&#x27; 2 menuentry &#x27;Cumulus-Linux GNU/Linux, with Linux 4.19.0-cl-1-amd64 (recovery mode)&#x27; 3 menuentry ONIE &#123; 123grub-reboot ONIEreboot setup the onie networkstop onie ztp 123onie-stop add ip address on eth0(mgmt interface) 12ip address add 100.64.31.101/24 dev eth0ip route add default via 100.64.31.1 install the cumulus systemstart a web serivce with python312python3 -m http.serverServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ... install cumulus os 12ONIE:/ # onie-nos-install http://100.64.21.13:8000/cumulus-linux-5.0.0-mlx-amd64.bin","categories":[{"name":"mellanox","slug":"mellanox","permalink":"https://nfshanq.github.io/categories/mellanox/"}],"tags":[{"name":"mellanox","slug":"mellanox","permalink":"https://nfshanq.github.io/tags/mellanox/"}]},{"title":"proxy arp","slug":"golang/proxy_arp","date":"2021-12-27T11:27:40.000Z","updated":"2021-12-28T01:37:23.662Z","comments":true,"path":"2021/12/27/golang/proxy_arp/","link":"","permalink":"https://nfshanq.github.io/2021/12/27/golang/proxy_arp/","excerpt":"","text":"proxy ARP golang123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657package mainimport ( &quot;flag&quot; &quot;log&quot; &quot;net&quot; &quot;github.com/mdlayher/arp&quot;)type cliFlag struct &#123; Ifname string Debug bool&#125;func main() &#123; var cli cliFlag flag.StringVar(&amp;cli.Ifname, &quot;i&quot;, &quot;vlan1000&quot;, &quot;Proxy Arp interface name&quot;) flag.BoolVar(&amp;cli.Debug, &quot;v&quot;, false, &quot;show verbose informations&quot;) flag.Parse() ifname, err := net.InterfaceByName(cli.Ifname) if err != nil &#123; log.Fatalln(&quot;get interface by name: &quot;, err) &#125; client, _ := arp.Dial(ifname) for &#123; arp_recv, _, err := client.Read() if err != nil &#123; log.Fatalln(&quot;read packets error: &quot;, err) &#125; if cli.Debug &#123; log.Println(&quot;recv arp: &quot;, arp_recv) &#125; arp_replay, err := arp.NewPacket(arp.OperationReply, ifname.HardwareAddr, arp_recv.TargetIP, arp_recv.SenderHardwareAddr, arp_recv.SenderIP) if err != nil &#123; log.Fatalln(&quot;create packets error: &quot;, err) &#125; destinationMAC := arp_recv.SenderHardwareAddr err = client.WriteTo(arp_replay, destinationMAC) if err != nil &#123; log.Fatalln(&quot;sent packet error: &quot;, err) &#125; if cli.Debug &#123; log.Println(&quot;sent arp: &quot;, arp_replay) &#125; &#125;&#125; go.mod 1234567891011121314module proxy_arpgo 1.17require github.com/google/gopacket v1.1.19require ( github.com/mdlayher/arp v0.0.0-20191213142603-f72070a231fc // indirect github.com/mdlayher/ethernet v0.0.0-20190606142754-0394541c37b7 // indirect github.com/mdlayher/raw v0.0.0-20211126142749-4eae47f3d54b // indirect golang.org/x/net v0.0.0-20211216030914-fe4d6282115f // indirect golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e // indirect) makefile 12345linux-arm64: CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o ./bin/proxy_arp.arm64 src/main.go linux: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o ./bin/proxy_arp src/main.go","categories":[{"name":"golang","slug":"golang","permalink":"https://nfshanq.github.io/categories/golang/"}],"tags":[{"name":"proxy_arp","slug":"proxy-arp","permalink":"https://nfshanq.github.io/tags/proxy-arp/"}]},{"title":"Linux Common Command","slug":"Linux/common_cmd/Linux-common-cmd","date":"2021-12-25T03:27:40.000Z","updated":"2021-12-25T13:02:38.060Z","comments":true,"path":"2021/12/25/Linux/common_cmd/Linux-common-cmd/","link":"","permalink":"https://nfshanq.github.io/2021/12/25/Linux/common_cmd/Linux-common-cmd/","excerpt":"","text":"Linux Common Command notes","categories":[{"name":"Linux","slug":"Linux","permalink":"https://nfshanq.github.io/categories/Linux/"},{"name":"Command","slug":"Linux/Command","permalink":"https://nfshanq.github.io/categories/Linux/Command/"}],"tags":[{"name":"Linux Common Command","slug":"Linux-Common-Command","permalink":"https://nfshanq.github.io/tags/Linux-Common-Command/"}]},{"title":"cloud-init","slug":"Linux/virt/cloud-init","date":"2021-12-19T03:27:40.000Z","updated":"2021-12-19T11:38:05.008Z","comments":true,"path":"2021/12/19/Linux/virt/cloud-init/","link":"","permalink":"https://nfshanq.github.io/2021/12/19/Linux/virt/cloud-init/","excerpt":"","text":"Cloud init guideref: https://cloudinit.readthedocs.io/en/latest/topics/examples.html 1. Install tools on the hypervisor machine1.1 Install kvm qemu virt1sudo apt install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virtinst 1.2 Install cloud init tools1sudo apt install -y cloud-utils download a cloud image1wget https://cloud-images.ubuntu.com/releases/focal/release/ubuntu-20.04-server-cloudimg-amd64.img create a vm image12qemu-img create -f qcow2 -b ubuntu-20.04-server-cloudimg-amd64.img client.qcow2qemu-img resize client.qcow2 +10G create a cloud init file1234567891011121314151617181920cat &gt; cloud-init.yaml &lt;&lt; EOF#cloud-confighostname: cloudimg.localuser: rootpassword: lab123chpasswd: &#123; expire: False &#125;ssh_pwauth: Trueusers: - name: lab shell: /bin/bash sudo: ALL=(ALL) NOPASSWD:ALL groups: root, sudo plain_text_passwd: &#x27;lab123&#x27; lock_passwd: falsegrowpart: mode: auto devices: [&#x27;/&#x27;]locale: en_US.UTF-8timezone: Asia/ShanghaiEOF create network config file1234567891011121314cat &gt; network.yaml &lt;&lt; EOF ethernets: enp1s0: dhcp4: false addresses: - 11.1.10.12/24 gateway4: 11.1.10.1 enp2s0: addresses: [ 192.168.122.110/24 ] #gateway4: 192.168.122.1 #nameservers: # addresses: [114.114.114.114]version: 2EOF create the cloud-init iso file12cloud-localds -m local -N network.yaml cloud-init.iso cloud-init.yaml boot a vm by virt-install123456789101112virt-install \\ --name vm1 \\ --ram=8192 \\ --vcpus 4 \\ --os-type linux \\ --os-variant ubuntu20.04 \\ --graphics none \\ --disk /home/lab/cloud/client.qcow2,device=disk,bus=virtio \\ --disk /home/lab/cloud/cloud-init.iso,device=cdrom \\ --network bridge=br10,model=virtio \\ --network bridge=virbr0,model=virtio \\ --import","categories":[{"name":"Linux","slug":"Linux","permalink":"https://nfshanq.github.io/categories/Linux/"},{"name":"Virt","slug":"Linux/Virt","permalink":"https://nfshanq.github.io/categories/Linux/Virt/"}],"tags":[{"name":"virt","slug":"virt","permalink":"https://nfshanq.github.io/tags/virt/"}]},{"title":"guestfish","slug":"Linux/virt/guestfish","date":"2021-12-19T03:27:40.000Z","updated":"2021-12-28T09:02:15.439Z","comments":true,"path":"2021/12/19/Linux/virt/guestfish/","link":"","permalink":"https://nfshanq.github.io/2021/12/19/Linux/virt/guestfish/","excerpt":"","text":"guestfishopen a image file1234567891011121314guestfish --rw -a ./ubuntu-20.04-server-cloudimg-amd64.imgWelcome to guestfish, the guest filesystem shell forediting virtual machine filesystems and disk images.Type: ‘help’ for help on commands ‘man’ to read the manual ‘quit’ to quit the shell&gt;&lt;fs&gt;&gt;&lt;fs&gt; run&gt;&lt;fs&gt; list-filesystems&gt;&lt;fs&gt; mount /dev/sda1 /&gt;&lt;fs&gt; cat /etc/shadow&gt;&lt;fs&gt; quit","categories":[{"name":"Linux","slug":"Linux","permalink":"https://nfshanq.github.io/categories/Linux/"},{"name":"Virt","slug":"Linux/Virt","permalink":"https://nfshanq.github.io/categories/Linux/Virt/"}],"tags":[{"name":"virt","slug":"virt","permalink":"https://nfshanq.github.io/tags/virt/"}]},{"title":"virt customize","slug":"Linux/virt/virt-customize","date":"2021-12-19T03:27:40.000Z","updated":"2021-12-19T11:37:58.200Z","comments":true,"path":"2021/12/19/Linux/virt/virt-customize/","link":"","permalink":"https://nfshanq.github.io/2021/12/19/Linux/virt/virt-customize/","excerpt":"","text":"virt-customize toolsref: https://libguestfs.org/virt-customize.1.html 1sudo apt install -y libguestfs-tools command help12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970virt-customize --helpvirt-customize: customize a virtual machine virt-customize [--options] -d domname virt-customize [--options] -a disk.img [-a disk.img ...]A short summary of the options is given below. For detailed help pleaseread the man page virt-customize(1).Options: -a, --add &lt;file&gt; Add disk image file --append-line &lt;FILE:LINE&gt; Append line(s) to the file --attach &lt;iso&gt; Attach data disk/ISO during install --attach-format &lt;format&gt; Set attach disk format -c, --connect &lt;uri&gt; Set libvirt URI --chmod &lt;PERMISSIONS:FILE&gt; Change the permissions of a file --color, --colors, --colour, --colours Use ANSI colour sequences even if not tty --commands-from-file &lt;FILENAME&gt; Read customize commands from file --copy &lt;SOURCE:DEST&gt; Copy files in disk image --copy-in &lt;LOCALPATH:REMOTEDIR&gt; Copy local files or directories into image -d, --domain &lt;domain&gt; Set libvirt guest name --delete &lt;PATH&gt; Delete a file or directory -n, --dryrun, --dry-run Perform a dry run --echo-keys Don’t turn off echo for passphrases --edit &lt;FILE:EXPR&gt; Edit file using Perl expression --firstboot &lt;SCRIPT&gt; Run script at first guest boot --firstboot-command &lt;&#x27;CMD+ARGS&#x27;&gt; Run command at first guest boot --firstboot-install &lt;PKG,PKG..&gt; Add package(s) to install at first boot --format &lt;format&gt; Set format (default: auto) --help Display brief help --hostname &lt;HOSTNAME&gt; Set the hostname --install &lt;PKG,PKG..&gt; Add package(s) to install --key &lt;SELECTOR&gt; Specify a LUKS key --keys-from-stdin Read passphrases from stdin --link &lt;TARGET:LINK[:LINK..]&gt; Create symbolic links -m, --memsize &lt;mb&gt; Set memory size --mkdir &lt;DIR&gt; Create a directory --move &lt;SOURCE:DEST&gt; Move files in disk image --network Enable appliance network (default) --no-logfile Scrub build log file --no-network Disable appliance network --password &lt;USER:SELECTOR&gt; Set user password --password-crypto &lt;md5|sha256|sha512&gt; Set password crypto -q, --quiet Don’t print progress messages --root-password &lt;SELECTOR&gt; Set root password --run &lt;SCRIPT&gt; Run script in disk image --run-command &lt;&#x27;CMD+ARGS&#x27;&gt; Run command in disk image --scrub &lt;FILE&gt; Scrub a file --selinux-relabel Relabel files with correct SELinux labels --sm-attach &lt;SELECTOR&gt; Attach to a subscription-manager pool --sm-credentials &lt;SELECTOR&gt; Credentials for subscription-manager --sm-register Register using subscription-manager --sm-remove Remove all the subscriptions --sm-unregister Unregister using subscription-manager --smp &lt;vcpus&gt; Set number of vCPUs --ssh-inject &lt;USER[:SELECTOR]&gt; Inject a public key into the guest --timezone &lt;TIMEZONE&gt; Set the default timezone --touch &lt;FILE&gt; Run touch on a file --truncate &lt;FILE&gt; Truncate a file to zero size --truncate-recursive &lt;PATH&gt; Recursively truncate all files in directory --uninstall &lt;PKG,PKG..&gt; Uninstall package(s) --update Update packages --upload &lt;FILE:DEST&gt; Upload local file to destination -V, --version Display version and exit -v, --verbose Enable libguestfs debugging messages --write &lt;FILE:CONTENT&gt; Write file -x Enable tracing of libguestfs calls 1 设置root密码12virt-customize -a ubuntu-20.04-server-cloudimg-amd64.img \\ --root-password password:lab123 output: 1234567[ 0.0] Examining the guest ...[ 4.3] Setting a random seedvirt-customize: warning: random seed could not be set for this type ofguest[ 4.4] Setting the machine ID in /etc/machine-id[ 4.4] Setting passwords[ 5.8] Finishing off 2 在Image中安装软件包12virt-customize -a ubuntu-20.04-server-cloudimg-amd64.img \\ --install net-tools,unzip output: 123456[ 0.0] Examining the guest ...[ 2.2] Setting a random seedvirt-customize: warning: random seed could not be set for this type ofguest[ 2.3] Installing packages: net-tools unzip[ 9.2] Finishing off 3 copy 文件到镜像中12virt-customize -a ubuntu-20.04-server-cloudimg-amd64.img \\ --upload ../http_test:/http_test output: 123456[ 0.0] Examining the guest ...[ 2.2] Setting a random seedvirt-customize: warning: random seed could not be set for this type ofguest[ 2.2] Uploading: ../http_test to /http_test[ 2.3] Finishing off 4 修改时区123virt-customize -a ubuntu-20.04-server-cloudimg-amd64.img \\ --timezone &quot;Asia/Shanghai&quot; 5 上传SSH公钥12virt-customize -a ubuntu-20.04-server-cloudimg-amd64.img \\ --ssh-inject lab:file:./id_rsa.pub 6 在文件中添加内容12virt-customize -a ubuntu-20.04-server-cloudimg-amd64.img \\ --append-line &#x27;/etc/hosts:10.0.0.1 foo&#x27; 7 create a user in image123456virt-customize -a ubuntu-20.04-server-cloudimg-amd64.img \\ --run-command &#x27;useradd test -s /bin/bash -m&#x27;virt-customize -a ubuntu-20.04-server-cloudimg-amd64.img \\ --password test:password:lab123 output: 1234567891011121314[ 0.0] Examining the guest ...[ 2.2] Setting a random seedvirt-customize: warning: random seed could not be set for this type ofguest[ 2.3] Running: useradd test -s /bin/bash -m[ 2.4] Finishing off[ 0.0] Examining the guest ...[ 2.2] Setting a random seedvirt-customize: warning: random seed could not be set for this type ofguest[ 2.3] Setting passwords[ 3.6] Finishing off","categories":[{"name":"Linux","slug":"Linux","permalink":"https://nfshanq.github.io/categories/Linux/"},{"name":"Virt","slug":"Linux/Virt","permalink":"https://nfshanq.github.io/categories/Linux/Virt/"}],"tags":[{"name":"virt","slug":"virt","permalink":"https://nfshanq.github.io/tags/virt/"}]},{"title":"create vm example by virt-install","slug":"Linux/virt/create-vm","date":"2021-12-19T03:27:40.000Z","updated":"2021-12-25T11:57:10.472Z","comments":true,"path":"2021/12/19/Linux/virt/create-vm/","link":"","permalink":"https://nfshanq.github.io/2021/12/19/Linux/virt/create-vm/","excerpt":"","text":"create vm example123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118#!/bin/bashset -eset -xID=$1BACKFILE_IMG=&quot;./ubuntu-20.04-server-cloudimg-amd64.img&quot;TARGET_IMG=&quot;client-$&#123;ID&#125;.qcow2&quot;TARGET_IMG_SIZE=&quot;20G&quot;ADDFILES=&quot;http_test&quot;HOSTNAME=&quot;client-$&#123;ID&#125;&quot;IF1_NAME=&quot;enp1s0&quot;IF1_IPADDRESS=&quot;11.1.11.$(( 20 + $&#123;ID&#125; ))/24&quot;IF1_GATEWAY=&quot;11.1.11.1&quot;IF2_NAME=&quot;enp2s0&quot;IF2_IPADDRESS=&quot;192.168.122.$(( 30 + $&#123;ID&#125; ))/24&quot;## create a image from backfileqemu-img create -f qcow2 -b $BACKFILE_IMG $TARGET_IMG## resize target image sizeqemu-img resize $TARGET_IMG $TARGET_IMG_SIZE## add user to image#virt-customize -a $&#123;TARGET_IMG&#125; --run-command &#x27;useradd lab -s /bin/bash -m -p &quot;&quot; -G sudo ; chage -d 99999 lab&#x27;## set user password#virt-customize -a $&#123;TARGET_IMG&#125; --password test:password:lab123## set root passwordvirt-customize -a $&#123;TARGET_IMG&#125; --root-password password:lab123## upload http_test and scripthttp_test_script=$(mktemp /tmp/httpXXXXXXXX.sh)cat &gt; $&#123;http_test_script&#125; &lt;&lt; EOF#!/bin/bashset -xwhile truedo /http_test -c 11.1.10.10 -s 90000000 sleep \\$(( \\$RANDOM % 1 ))doneEOFvirt-customize -a $&#123;TARGET_IMG&#125; --upload http_test:/http_testvirt-customize -a $&#123;TARGET_IMG&#125; --upload $&#123;http_test_script&#125;:/http.shvirt-customize -a $&#123;TARGET_IMG&#125; --run-command &#x27;chmod +x /http.sh&#x27;## run script on image on firstbootscript=$(mktemp /tmp/scriptXXXXXXXXXX.sh)cat &gt; $&#123;script&#125; &lt;&lt; EOF#!/bin/bashssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -q -N &quot;&quot;ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -q -N &quot;&quot;chmod 0600 /etc/ssh/ssh_host*echo PermitRootLogin yes &gt;&gt; /etc/ssh/sshd_configsed -i &quot;s/PasswordAuthentication no/PasswordAuthentication yes/g&quot; /etc/ssh/sshd_confighostnamectl set-hostname $&#123;HOSTNAME&#125;EOFvirt-customize -a $&#123;TARGET_IMG&#125; --firstboot $&#123;script&#125;rm -rf $&#123;script&#125;## create network config filenetwork_cfg_tmp=$(mktemp /tmp/networkXXXXXXXX.yaml)cat &gt; $&#123;network_cfg_tmp&#125; &lt;&lt; EOFnetwork: ethernets: $&#123;IF1_NAME&#125;: dhcp4: false addresses: - $&#123;IF1_IPADDRESS&#125; gateway4: $&#123;IF1_GATEWAY&#125; $&#123;IF2_NAME&#125;: addresses: [ $&#123;IF2_IPADDRESS&#125; ] version: 2EOF## add network configvirt-customize -a $&#123;TARGET_IMG&#125; --run-command &#x27;rm -rf /etc/netplan/*&#x27;virt-customize -a $&#123;TARGET_IMG&#125; --upload $&#123;network_cfg_tmp&#125;:/etc/netplan/00-installer-config.yamlrm -rf $&#123;network_cfg_tmp&#125;### add start scriptstart_script=$(mktemp /tmp/startXXXXXXXX)cat &gt; $&#123;start_script&#125; &lt;&lt; EOF[Unit]Description=start http testAfter=network.target[Service]ExecStart=bash -c /http.sh[Install]WantedBy=multi-user.targetEOFvirt-customize -a $&#123;TARGET_IMG&#125; --upload $&#123;start_script&#125;:/lib/systemd/system/http_test.servicevirt-customize -a $&#123;TARGET_IMG&#125; --run-command &#x27;systemctl daemon-reload; systemctl enable http_test&#x27;rm -rf $&#123;start_script&#125;## boot vmvirt-install \\ --name $&#123;HOSTNAME&#125; \\ --ram=8192 \\ --vcpus 4 \\ --os-type linux \\ --os-variant ubuntu20.04 \\ --graphics none \\ --disk /home/lab/cloud/$&#123;TARGET_IMG&#125;,device=disk,bus=virtio \\ --network bridge=br11,model=virtio \\ --network bridge=virbr0,model=virtio \\ --noautoconsole \\ --import resize the disk size123growpart /dev/vda 1resize2fs /dev/vda1","categories":[{"name":"Linux","slug":"Linux","permalink":"https://nfshanq.github.io/categories/Linux/"},{"name":"Virt","slug":"Linux/Virt","permalink":"https://nfshanq.github.io/categories/Linux/Virt/"}],"tags":[{"name":"virt","slug":"virt","permalink":"https://nfshanq.github.io/tags/virt/"}]},{"title":"bluefield-bfb-install","slug":"mellanox/bluefield/bluefield-bfb-install","date":"2021-12-19T03:21:03.000Z","updated":"2021-12-19T11:47:24.574Z","comments":true,"path":"2021/12/19/mellanox/bluefield/bluefield-bfb-install/","link":"","permalink":"https://nfshanq.github.io/2021/12/19/mellanox/bluefield/bluefield-bfb-install/","excerpt":"","text":"bluefield bfb installref: https://docs.nvidia.com/doca/sdk/installation-guide/index.html 1. install rshim and pvinstall rshim: 1dpkg -i rshim_2.0.6-3.ge329c69_amd64.deb output: 1234567Selecting previously unselected package rshim.(Reading database ... 71752 files and directories currently installed.)Preparing to unpack rshim_2.0.6-3.ge329c69_amd64.deb ...Unpacking rshim (2.0.6-3.ge329c69) ...Setting up rshim (2.0.6-3.ge329c69) ...Created symlink /etc/systemd/system/multi-user.target.wants/rshim.service → /lib/systemd/system/rshim.service.Processing triggers for man-db (2.9.1-1) ... install pv: 1apt install -y pv 2 start and check rshim service12345678910111213141516171819202122232425systemctl is-enabled rshimenabledsystemctl start rshimsystemctl status rshim● rshim.service - rshim driver for BlueField SoC Loaded: loaded (/lib/systemd/system/rshim.service; enabled; vendor preset: enabled) Active: active (running) since Fri 2021-12-17 07:01:48 UTC; 14min ago Docs: man:rshim(8) Process: 10663 ExecStart=/usr/sbin/rshim $OPTIONS (code=exited, status=0/SUCCESS) Main PID: 10666 (rshim) Tasks: 6 (limit: 629145) Memory: 2.2M CGroup: /system.slice/rshim.service └─10666 /usr/sbin/rshimDec 17 07:01:48 ubuntu2004-lab1 systemd[1]: Starting rshim driver for BlueField SoC...Dec 17 07:01:48 ubuntu2004-lab1 systemd[1]: Started rshim driver for BlueField SoC.Dec 17 07:01:48 ubuntu2004-lab1 rshim[10666]: Probing pcie-0000:3b:00.2Dec 17 07:01:48 ubuntu2004-lab1 rshim[10666]: create rshim pcie-0000:3b:00.2Dec 17 07:01:49 ubuntu2004-lab1 rshim[10666]: rshim0 attachedDec 17 07:08:03 ubuntu2004-lab1 rshim[10666]: rshim0 boot openDec 17 07:08:13 ubuntu2004-lab1 rshim[10666]: rshim0 boot close 2.1 check rshim1234567# ls -lh /dev/rshim0/total 0crw------- 1 root root 235, 0 Dec 17 07:01 bootcrw------- 1 root root 234, 0 Dec 17 07:01 consolecrw------- 1 root root 511, 0 Dec 17 07:01 misccrw------- 1 root root 236, 0 Dec 17 07:01 rshim 1234567Dec 17 07:01:48 ubuntu2004-lab1 rshim[10666]: Probing pcie-0000:3b:00.2Dec 17 07:01:48 ubuntu2004-lab1 rshim[10666]: create rshim pcie-0000:3b:00.2Dec 17 07:01:49 ubuntu2004-lab1 rshim[10666]: rshim0 attachedDec 17 07:08:03 ubuntu2004-lab1 rshim[10666]: rshim0 boot openDec 17 07:08:13 ubuntu2004-lab1 rshim[10666]: rshim0 boot closepcie-0000:3b:00.2 --&gt; rshim0 3 install bfb to bluefield NIC3.1 create login passwordThe password is lab123 1echo &quot;ubuntu_PASSWORD=&#x27;$(openssl passwd -1 lab123)&#x27;&quot; | tee bf.cfg 3.2 install bfb to NIC1bfb-install --rshim &lt;rshimN&gt; --bfb &lt;image_path.bfb&gt; --config bf.cfg example: 1bfb-install --rshim rshim0 --bfb DOCA_v1.2.0_BlueField_OS_Ubuntu_20.04-5.4.0-1022-bluefield-5.5-1.0.3.2-3.8.0.11969-1.signed-aarch64.bfb --config bf.cfg output: 123456789101112131415161718192021Pushing bfb + cfg 623MiB 0:00:54 [11.4MiB/s] [ &lt;=&gt; ]Collecting BlueField booting status. Press Ctrl+C to stop… INFO[BL2]: start INFO[BL2]: DDR POST passed INFO[BL2]: UEFI loaded INFO[BL31]: start INFO[BL31]: runtime INFO[UEFI]: UPVS valid INFO[UEFI]: eMMC init INFO[UEFI]: eMMC probed INFO[UEFI]: PMI: updates started INFO[UEFI]: PMI: boot image update INFO[UEFI]: PMI: updates completed, status 0 INFO[UEFI]: PCIe enum start INFO[UEFI]: PCIe enum end INFO[MISC]: Found bf.cfg INFO[MISC]: Ubuntu installation started INFO[MISC]: Installing OS image INFO[MISC]: Changing the default password for user ubuntu INFO[MISC]: Installation finished 4 connect bluefield nic by console port (open another session)1screen /dev/rshim0/console console output: 12345678910111213141516171819202122232425262728293031323334353637383940414243write counter to semaphore: Operation not permittedwrite counter to semaphore: Operation not permittedwrite counter to semaphore: Operation not permittedwrite counter to semaphore: Operation not permittedwrite counter to semaphore: Operation not permittedwrite counter to semaphore: Operation not permittedINFO: Changing the default password for user ubuntuBoot0000* focalINFO: Installation finishedINFO: Rebooting...Mellanox BlueField-2 A1 BL1 V1.1NOTICE: BL2R: v2.2(release):3.8.0-25-ge146e67NOTICE: BL2R: Built : 15:12:50, Nov 30 2021NOTICE: BL2R built for hw (ver 1)NOTICE: BL2R: Booting BL2NOTICE: BL2: v2.2(release):3.8.0-25-ge146e67NOTICE: BL2: Built : 15:12:50, Nov 30 2021NOTICE: BL2 built for hw (ver 1)NOTICE: Running as MBF2H332A-AECO systemNOTICE: No SPD detected on MSS0 DIMM0NOTICE: No SPD detected on MSS0 DIMM1NOTICE: Finished initializing DDRNOTICE: DDR POST passed.NOTICE: BL31: v2.2(release):3.8.0-25-ge146e67NOTICE: BL31: Built : 15:12:50, Nov 30 2021NOTICE: BL31 built for hw (ver 1)UEFI firmware (version BlueField:3.8.0-34-gb1e3ae0 built at 15:15:10 on Nov 30 2021)Press &lt;ESC&gt; twice to enter UEFI menu3 seconds remaining2 seconds remaining1 seconds remaining0[ 0.608703] rtc-efi rtc-efi: hctosys: unable to read the hardware clock[ 10.715782] mlx5_core 0000:03:00.0: mlx5_devlink_eswitch_lag_port_select_mode_set:4632:(pid 887): hash based LAG is not supported by current device[ 12.861453] mlx5_core 0000:03:00.1: mlx5_devlink_eswitch_lag_port_select_mode_set:4632:(pid 887): hash based LAG is not supported by current deviceUbuntu 20.04.3 LTS localhost hvc0localhost login: The login username is ubuntu. The password is lab123 5 connect bluefield use by ssh5.1 config tmfifo_net01ip add add 192.168.100.1/30 dev tmfifo_net0 check interface 1234567891011root@ubuntu2004-lab1:~# ip address show tmfifo_net016: tmfifo_net0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UNKNOWN group default qlen 1000 link/ether 00:1a:ca:ff:ff:02 brd ff:ff:ff:ff:ff:ff inet 192.168.100.1/30 scope global tmfifo_net0 valid_lft forever preferred_lft forever inet6 fe80::21a:caff:feff:ff02/64 scope link valid_lft forever preferred_lft foreverroot@ubuntu2004-lab1:~# ping 192.168.100.2PING 192.168.100.2 (192.168.100.2) 56(84) bytes of data.64 bytes from 192.168.100.2: icmp_seq=1 ttl=64 time=2.46 ms connect bluefield by ssh 1234567891011121314151617181920212223root@ubuntu2004-lab1:~# ssh -l ubuntu 192.168.100.2The authenticity of host &#x27;192.168.100.2 (192.168.100.2)&#x27; can&#x27;t be established.ECDSA key fingerprint is SHA256:QqO4i9YSGBI6pp1N8JJKqnTFokEEn1JVh+sdxcYPIb4.Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added &#x27;192.168.100.2&#x27; (ECDSA) to the list of known hosts.ubuntu@192.168.100.2&#x27;s password:Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-1022-bluefield aarch64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Tue Sep 7 18:44:49 UTC 2021 System load: 0.11 Processes: 231 Usage of /: 5.1% of 57.10GB Users logged in: 1 Memory usage: 5% IPv4 address for tmfifo_net0: 192.168.100.2 Swap usage: 0%0 updates can be applied immediately.Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings","categories":[{"name":"Smart-NIC","slug":"Smart-NIC","permalink":"https://nfshanq.github.io/categories/Smart-NIC/"}],"tags":[{"name":"Smart NIC","slug":"Smart-NIC","permalink":"https://nfshanq.github.io/tags/Smart-NIC/"}]},{"title":"bluefield nic double arp packets","slug":"mellanox/bluefield/bluefield-double-arp","date":"2021-12-19T03:21:03.000Z","updated":"2021-12-31T06:24:11.793Z","comments":true,"path":"2021/12/19/mellanox/bluefield/bluefield-double-arp/","link":"","permalink":"https://nfshanq.github.io/2021/12/19/mellanox/bluefield/bluefield-double-arp/","excerpt":"","text":"1. Prepere1.1enable hash mode 1mlxconfig -d /dev/mst/&lt;device-name&gt; s LAG_RESOURCE_ALLOCATION=1 Add/edit the following field from /etc/mellanox/mlnx-bf.conf as follows: 1LAG_HASH_MODE=&quot;yes&quot; 1.2 Delete default ovs and sf interfacedelete default ovs command: 12ovs-vsctl del-br ovsbr1ovs-vsctl del-br ovsbr2 delete sf interface 12345sf_to_delete=$(mlnx-sf -a show | grep &quot;SF Index&quot; | cut -d&quot; &quot; -f3)for sf in $sf_to_delete; do mlnx-sf -a delete -i &quot;$sf&quot;;done modify the configfile: /etc/mellanox/mlnx-sf.conf 12345root@localhost:/home/ubuntu# cat /etc/mellanox/mlnx-sf.conf#/sbin/mlnx-sf --action create --device 0000:03:00.0 --sfnum 0 --hwaddr 02:2a:e6:4d:e1:ad#/sbin/mlnx-sf --action create --device 0000:03:00.1 --sfnum 0 --hwaddr 02:06:f3:ce:ad:5a 1.3 Hide the second PF on host123456# Hide the second PF on host pf_hidden=$(mlxconfig -d &quot;$mst_dev&quot; q HIDE_PORT2_PF | grep True) if [ -z &quot;$pf_hidden&quot; ]; then echo y | mlxconfig -d &quot;$mst_dev&quot; s HIDE_PORT2_PF=True echo Please power cycle host server to hide the second unused host representative fi Reboot the bluefield NIC 2. config the bond interface2.1 command:1234567891011121314ip link add bond0 type bondip link set bond0 downip link set bond0 type bond miimon 100 mode 4ip link set p0 downip link set p1 downip link set p0 master bond0ip link set p1 master bond0ip link set p0 upip link set p1 upip link set bond0 upovs-vsctl add-br bf-lagovs-vsctl add-port bf-lag bond0ovs-vsctl add-port bf-lag pf0hpfip link set bf-lag up 2.2 netplan config:12345678910111213141516171819202122232425262728293031323334network: ethernets: oob_net0: addresses: [100.64.31.11/24] gateway4: 100.64.31.1 nameservers: addresses: [114.114.114.114] tmfifo_net0: addresses: - 192.168.100.2/30 dhcp4: false routes: - metric: 1025 to: 0.0.0.0/0 via: 192.168.100.1 p0: dhcp4: false p1: dhcp4: false pf0hpf: dhcp4: false bonds: bond0: dhcp4: false interfaces: - p0 - p1 parameters: mode: 802.3ad lacp-rate: fast transmit-hash-policy: layer3+4 mii-monitor-interval: 1 #renderer: NetworkManager version: 2 2.3 check bond interface status12root@localhost:/home/ubuntu# cat /sys/class/net/bond0/bonding/slavesp0 p1 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677root@localhost:/home/ubuntu# cat /proc/net/bonding/bond0Ethernet Channel Bonding Driver: v3.7.1 (April 27, 2011)Bonding Mode: IEEE 802.3ad Dynamic link aggregationTransmit Hash Policy: layer3+4 (1)MII Status: upMII Polling Interval (ms): 1Up Delay (ms): 0Down Delay (ms): 0Peer Notification Delay (ms): 0802.3ad infoLACP rate: fastMin links: 0Aggregator selection policy (ad_select): stableSystem priority: 65535System MAC address: 7a:3f:79:7b:96:fbActive Aggregator Info: Aggregator ID: 1 Number of ports: 2 Actor Key: 15 Partner Key: 32 Partner Mac Address: c0:42:d0:08:9a:80Slave Interface: p1MII Status: upSpeed: 10000 MbpsDuplex: fullLink Failure Count: 1Permanent HW addr: 08:c0:eb:2b:18:11Slave queue ID: 0Aggregator ID: 1Actor Churn State: nonePartner Churn State: noneActor Churned Count: 0Partner Churned Count: 0details actor lacp pdu: system priority: 65535 system mac address: 7a:3f:79:7b:96:fb port key: 15 port priority: 255 port number: 1 port state: 63details partner lacp pdu: system priority: 127 system mac address: c0:42:d0:08:9a:80 oper key: 32 port priority: 127 port number: 16 port state: 63Slave Interface: p0MII Status: upSpeed: 10000 MbpsDuplex: fullLink Failure Count: 1Permanent HW addr: 08:c0:eb:2b:18:10Slave queue ID: 0Aggregator ID: 1Actor Churn State: nonePartner Churn State: noneActor Churned Count: 0Partner Churned Count: 0details actor lacp pdu: system priority: 65535 system mac address: 7a:3f:79:7b:96:fb port key: 15 port priority: 255 port number: 2 port state: 63details partner lacp pdu: system priority: 127 system mac address: c0:42:d0:08:9a:80 oper key: 32 port priority: 127 port number: 2 port state: 63 2.4 remove or add slave interface to bondingremove 1echo &quot;-p0&quot; &gt; /sys/class/net/bond0/bonding/slaves add 1echo &quot;+p0&quot; &gt; /sys/class/net/bond0/bonding/slaves 3. use tc to copy arp packets123tc qdisc add dev pf0hpf handle ffff: ingresstc filter add dev pf0hpf parent ffff: protocol arp prio 1 flower skip_hw dst_mac ff:ff:ff:ff:ff:ff action mirred egress mirror dev p0 pipe action mirred egress mirror dev p1 oronly match arp request packets 1tc filter add dev pf0hpf parent ffff: protocol arp prio 1 flower skip_hw arp_op request action mirred egress mirror dev p0 pipe action mirred egress mirror dev p1 802.1Q vlan 12tc filter add dev pf0hpf parent ffff: protocol 802.1Q prio 1 flower skip_hw vlan_ethtype arp action mirred egress mirror dev p0 pipe action mirred egress mirror dev p1 ref: https://man7.org/linux/man-pages/man8/tc-flower.8.html 3.1 check tc filter rule123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263root@localhost:/home/ubuntu# tc -s -p filter ls dev pf0hpf parent ffff:filter ingress protocol arp pref 1 flower chain 0filter ingress protocol arp pref 1 flower chain 0 handle 0x1 dst_mac ff:ff:ff:ff:ff:ff eth_type arp not_in_hw action order 1: mirred (Egress Mirror to device p0) pipe index 3 ref 1 bind 1 installed 1514 sec used 0 sec Action statistics: Sent 69644 bytes 1514 pkt (dropped 0, overlimits 0 requeues 0) backlog 0b 0p requeues 0 action order 2: mirred (Egress Mirror to device p1) pipe index 5 ref 1 bind 1 installed 1514 sec used 0 sec Action statistics: Sent 69644 bytes 1514 pkt (dropped 0, overlimits 0 requeues 0) backlog 0b 0p requeues 0filter ingress protocol LLDP pref 2 flower chain 0filter ingress protocol LLDP pref 2 flower chain 0 handle 0x1 dst_mac 01:80:c2:00:00:0e src_mac 00:50:56:50:86:1d eth_type 88cc in_hw in_hw_count 1 action order 1: gact action drop random type none pass val 0 index 1 ref 1 bind 1 installed 9 sec used 9 sec Action statistics: Sent 0 bytes 0 pkt (dropped 0, overlimits 0 requeues 0) backlog 0b 0p requeues 0 cookie 45b15fb785436a48db7baabfebadfc89 no_percpufilter ingress protocol arp pref 5 flower chain 0filter ingress protocol arp pref 5 flower chain 0 handle 0x1 dst_mac ff:ff:ff:ff:ff:ff src_mac 00:0c:29:72:e7:c4 eth_type arp arp_sip 11.1.230.10 arp_tip 11.1.230.1 arp_op request not_in_hw action order 1: skbedit ptype host pipe index 1 ref 1 bind 1 installed 7 sec used 7 sec Action statistics: Sent 0 bytes 0 pkt (dropped 0, overlimits 0 requeues 0) backlog 0b 0p requeues 0 action order 2: mirred (Ingress Mirror to device bf-lag) pipe index 1 ref 1 bind 1 installed 7 sec used 7 sec Action statistics: Sent 0 bytes 0 pkt (dropped 0, overlimits 0 requeues 0) backlog 0b 0p requeues 0 cookie 688501ce534a508863c24fbf6f995a36 no_percpu action order 3: mirred (Egress Redirect to device bond0) stolen index 2 ref 1 bind 1 installed 7 sec used 7 sec Action statistics: Sent 0 bytes 0 pkt (dropped 0, overlimits 0 requeues 0) backlog 0b 0p requeues 0 cookie 688501ce534a508863c24fbf6f995a36 no_percpu 3.2 delete tc filter1tc filter del dev pf0hpf parent ffff: protocol arp prio 1 4 interface up down script in networkd-dispatcher4.1 networkd-dispatcher service1234567891011121314151617181920networkd-dispatcher.service - Dispatcher daemon for systemd-networkd Loaded: loaded (/lib/systemd/system/networkd-dispatcher.service; enabled; vendor preset: enabled) Active: active (running) since Thu 2021-12-30 01:59:25 UTC; 1h 46min ago Main PID: 1402437 (networkd-dispat) Tasks: 1 (limit: 19076) Memory: 12.4M CGroup: /system.slice/networkd-dispatcher.service └─1402437 /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers --script-dir /etc/networkd-dispatcherDec 30 03:24:14 localhost.localdomain networkd-dispatcher[1449900]: p1 change to enslaved, add tc filter ruleDec 30 03:31:35 localhost.localdomain networkd-dispatcher[1402437]: INFO:Invoking &#x27;/etc/networkd-dispatcher/no-carrier.d/50arp-mirror.sh&#x27; for interface p0Dec 30 03:31:51 localhost.localdomain networkd-dispatcher[1402437]: INFO:Invoking &#x27;/etc/networkd-dispatcher/enslaved.d/50arp-mirror.sh&#x27; for interface p0Dec 30 03:31:51 localhost.localdomain networkd-dispatcher[1454738]: p0 change to enslaved, add tc filter ruleDec 30 03:32:23 localhost.localdomain networkd-dispatcher[1402437]: INFO:Invoking &#x27;/etc/networkd-dispatcher/no-carrier.d/50arp-mirror.sh&#x27; for interface p0Dec 30 03:32:32 localhost.localdomain networkd-dispatcher[1402437]: INFO:Invoking &#x27;/etc/networkd-dispatcher/enslaved.d/50arp-mirror.sh&#x27; for interface p0Dec 30 03:32:32 localhost.localdomain networkd-dispatcher[1455161]: p0 change to enslaved, add tc filter ruleDec 30 03:32:41 localhost.localdomain networkd-dispatcher[1402437]: INFO:Invoking &#x27;/etc/networkd-dispatcher/no-carrier.d/50arp-mirror.sh&#x27; for interface p0Dec 30 03:32:47 localhost.localdomain networkd-dispatcher[1402437]: INFO:Invoking &#x27;/etc/networkd-dispatcher/enslaved.d/50arp-mirror.sh&#x27; for interface p0Dec 30 03:32:47 localhost.localdomain networkd-dispatcher[1455339]: p0 change to enslaved, add tc filter rule 4.2 modify networkd-dispatcher configure 1234567cat /etc/default/networkd-dispatcher# Specify command line options here. This config file is used# by the included systemd service file.networkd_dispatcher_args=&quot;--run-startup-triggers --script-dir /etc/networkd-dispatcher&quot;# -v for debug information 4.3 add script-dir directory 1mkdir -p /etc/networkd-dispatcher/&#123;enslaved.d,no-carrier.d&#125; 4.4 add script enslaved.d/50arp-mirror.sh 123456#!/bin/bashif [[ $IFACE == &quot;p0&quot; || $IFACE == &quot;p1&quot; ]]; then echo &quot;$IFACE change to enslaved, add tc filter rule&quot; | tee -a /var/log/syslog; tc filter add dev pf0hpf parent ffff: protocol 802.1Q prio 2 flower skip_hw vlan_ethtype arp action mirred egress mirror dev p0 pipe action mirred egress mirror dev p1; tc filter add dev pf0hpf parent ffff: protocol arp prio 3 flower skip_hw arp_op request action mirred egress mirror dev p0 pipe action mirred egress mirror dev p1;fi no-carrier.d/50arp-mirror.sh 123456 #!/bin/bashif [[ $IFACE == &quot;p0&quot; || $IFACE == &quot;p1&quot; ]]; then echo &quot;$IFACE change to no-carrie, delete tc filter rule&quot; | tee -a /var/log/syslog; tc filter del dev pf0hpf parent ffff: protocol 802.1Q prio 2; tc filter del dev pf0hpf parent ffff: protocol arp prio 3;fi add script execute 12chmod +x enslaved.d/50arp-mirror.sh chmod +x no-carrier.d/50arp-mirror.sh ref: networkd-dispatcher 5 log/var/log/syslog 12345678Sep 7 18:52:14 localhost kernel: [ 898.282891] tc mirred to Houston: device bf-lag is downSep 7 18:52:15 localhost kernel: [ 899.283762] tc mirred to Houston: device bf-lag is downSep 7 18:52:16 localhost kernel: [ 900.284601] tc mirred to Houston: device bf-lag is downSep 7 18:52:17 localhost systemd[1]: Starting Cleanup of Temporary Directories...Sep 7 18:52:17 localhost systemd[1]: systemd-tmpfiles-clean.service: Succeeded.Sep 7 18:52:17 localhost systemd[1]: Finished Cleanup of Temporary Directories.Sep 7 18:52:17 localhost kernel: [ 901.285391] tc mirred to Houston: device bf-lag is downSep 7 18:52:18 localhost kernel: [ 902.286219] tc mirred to Houston: device bf-lag is down","categories":[{"name":"Smart-NIC","slug":"Smart-NIC","permalink":"https://nfshanq.github.io/categories/Smart-NIC/"}],"tags":[{"name":"Smart NIC","slug":"Smart-NIC","permalink":"https://nfshanq.github.io/tags/Smart-NIC/"}]},{"title":"rke2-install","slug":"kubernetes/rancher/rke2-install","date":"2021-12-18T22:48:47.000Z","updated":"2021-12-19T09:22:12.216Z","comments":true,"path":"2021/12/18/kubernetes/rancher/rke2-install/","link":"","permalink":"https://nfshanq.github.io/2021/12/18/kubernetes/rancher/rke2-install/","excerpt":"","text":"1 系统准备1.1 DNS 配置或者修改/etc/hosts 文件 123100.64.20.101 k3s-001100.64.20.102 k3s-002100.64.20.103 k3s-003 1.2. disable SELINUX1.3. linux module123456# cat /etc/sysctl.confnet.bridge.bridge-nf-call-ip6tables = 1net.bridge.bridge-nf-call-iptables = 1net.ipv4.ip_forward = 1# modprobe br_netfilter# sysctl -p 1.4. 修改Firewall 规则master 需要open TCP 9345 port 1.5. networkmanager 的修改123# cat /etc/NetworkManager/conf.d/rke2-canal.conf[keyfile]unmanaged-devices=interface-name:cali*;interface-name:flannel* 2. 安装rke21234Master node:# curl -sfL http://rancher-mirror.rancher.cn/rke2/install.sh | INSTALL_RKE2_MIRROR=cn sh -worker node:# curl -sfL http://rancher-mirror.rancher.cn/rke2/install.sh | INSTALL_RKE2_MIRROR=cn INSTALL_RKE2_TYPE=&quot;agent&quot; sh - 指定一个安装的版本 1curl -sfL http://rancher-mirror.rancher.cn/rke2/install.sh | INSTALL_RKE2_VERIOIN= vX.Y.Z- INSTALL_RKE2_MIRROR=cn sh - 2.1 启动 第一个 rke2 master 节点12# systemctl enable rke2-server# systemctl start rke2-server 在第一次启动后，在/var/lib/rancher/rke2 目录下会创建 rke2 的环境 1234567891011121314151617181920root@k3s-001:/var/lib/rancher/rke2# ls -lhtotal 12Kdrwxr-xr-x 7 root root 4.0K Nov 19 08:08 agentlrwxrwxrwx 1 root root 58 Nov 19 08:03 bin -&gt; /var/lib/rancher/rke2/data/v1.21.6-rke2r1-fd8a733b61b5/bindrwxr-xr-x 3 root root 4.0K Nov 19 08:03 datadrwx------ 7 root root 4.0K Nov 19 08:07 serverroot@k3s-001:/var/lib/rancher/rke2# ls -lh ./bin/total 269M-rwxr-xr-x 1 root root 33M Nov 19 08:03 containerd-rwxr-xr-x 1 root root 6.2M Nov 19 08:03 containerd-shim-rwxr-xr-x 1 root root 11M Nov 19 08:03 containerd-shim-runc-v1-rwxr-xr-x 1 root root 11M Nov 19 08:03 containerd-shim-runc-v2-rwxr-xr-x 1 root root 23M Nov 19 08:03 crictl-rwxr-xr-x 1 root root 19M Nov 19 08:03 ctr-rwxr-xr-x 1 root root 47M Nov 19 08:03 kubectl-rwxr-xr-x 1 root root 112M Nov 19 08:03 kubelet-rwxr-xr-x 1 root root 11M Nov 19 08:03 runc-rwxr-xr-x 1 root root 307K Nov 19 08:03 socatroot@k3s-001:/var/lib/rancher/rke2# 在 /etc/rancher/rke2 目录下会生成 rke2.yaml 的文件。这是一个 kubectl 的配置文件，用于集群管理。 1234root@k3s-001:~# ls -l /etc/rancher/rke2/total 4-rw------- 1 root root 2961 Nov 19 08:03 rke2.yamlroot@k3s-001:~# 通过kubectl 管理k3s 集群 12export KUBECONFIG=/etc/rancher/rke2/rke2.yamlexport PATH=$PATH:/var/lib/rancher/rke2/bin 查看k3s cluster(rke2) 12345678910111213141516171819202122root@k3s-001:~# kubectl get pod -ANAMESPACE NAME READY STATUS RESTARTS AGEkube-system cloud-controller-manager-k3s-001 1/1 Running 0 19hkube-system etcd-k3s-001 1/1 Running 0 19hkube-system helm-install-rke2-canal-nwqr2 0/1 Completed 0 19hkube-system helm-install-rke2-coredns-86s8w 0/1 Completed 0 19hkube-system helm-install-rke2-ingress-nginx-t2bvr 0/1 Completed 0 19hkube-system helm-install-rke2-metrics-server-2q2f7 0/1 Completed 0 19hkube-system kube-apiserver-k3s-001 1/1 Running 0 19hkube-system kube-controller-manager-k3s-001 1/1 Running 0 19hkube-system kube-proxy-k3s-001 1/1 Running 0 19hkube-system kube-scheduler-k3s-001 1/1 Running 0 19hkube-system rke2-canal-46v6k 2/2 Running 0 19hkube-system rke2-coredns-rke2-coredns-5c84cbd6bd-tdlcn 1/1 Running 0 19hkube-system rke2-coredns-rke2-coredns-autoscaler-78bdc5d6c-gj4w6 1/1 Running 0 19hkube-system rke2-ingress-nginx-controller-gxszn 1/1 Running 0 19hkube-system rke2-metrics-server-5df7d77b5b-p2j7t 1/1 Running 0 19hroot@k3s-001:~# kubectl get node -ANAME STATUS ROLES AGE VERSIONk3s-001 Ready control-plane,etcd,master 19h v1.21.6+rke2r1root@k3s-001:~# 修改第一个节点的 rke2 配置文件： 12345678910# cat /etc/rancher/rke2/config.yaml# token path /var/lib/rancher/rke2/server/node-tokentoken: K10b74ab83885c946d61159a734036a4f964f54acd80a5a74042cf9adff34a983b0::server:82ed82eb9668d57283c1efd84c5c1a05node-name: &quot;k3s-001&quot;# node-taint:node-label: - &quot;node=Master&quot; - &quot;k3s-001=Master&quot; 重启rke2 server 12# systemctl daemon-reload# systemctl restart rke2-server 2.2 添加第二个master 节点在第二个节点上添加 配置文件(先不要启动第二节点的rke2-server 服务，如果之前启动过，那么会有一些配置文件不一致导致无法加入集群) 第二个节点的配置文件： 12345678910111213# mkdir -p /etc/rancher/rke2/# cat /etc/rancher/rke2/config.yaml# token path /var/lib/rancher/rke2/server/node-tokenserver: &quot;https://100.64.20.101:9345&quot;# token path /var/lib/rancher/rke2/server/node-token (from first master node)token: K10b74ab83885c946d61159a734036a4f964f54acd80a5a74042cf9adff34a983b0::server:82ed82eb9668d57283c1efd84c5c1a05node-name: &quot;k3s-002&quot;# node-taint:node-label: - &quot;node=Master&quot; - &quot;k3s-002=Master&quot; 2.3 添加第三个节点作为work 节点123456789101112# mkdir -p /etc/rancher/rke2/# cat /etc/rancher/rke2/config.yaml# token path /var/lib/rancher/rke2/server/node-tokenserver: &quot;https://100.64.20.101:9345&quot;# token path /var/lib/rancher/rke2/server/node-token (from first master node)token: K10b74ab83885c946d61159a734036a4f964f54acd80a5a74042cf9adff34a983b0::server:82ed82eb9668d57283c1efd84c5c1a05node-name: &quot;k3s-003&quot;# node-taint:node-label: - &quot;node=Worker&quot; - &quot;k3s-003=Worker&quot; 12systemctl daemon-reloadsystemctl restart rke2-agent 检查 containerd1#/var/lib/rancher/rke2/bin/crictl --runtime-endpoint=unix:///run/k3s/containerd/containerd.sock ps 配置master 上的管理cli 环境变量123456# cd $HOMEmkdir .kubeln -s /etc/rancher/rke2/rke2.yaml ~/.kube/configchmod 600 ~/.kube/configln -s /var/lib/rancher/rke2/agent/etc/crictl.yaml /etc/crictl.yamlexport PATH=$PATH:/var/lib/rancher/rke2/bin container 的image rergistory -TBD12345678cat /etc/rancher/rke2/registries.yamlmirrors: aliyuns.com: endpoint: - &quot;&quot;configs: 配置etcd的 snapshots 12345678910token: K10b74ab83885c946d61159a734036a4f964f54acd80a5a74042cf9adff34a983b0::server:82ed82eb9668d57283c1efd84c5c1a05node-name: &quot;k3s-001&quot;# node-taint:node-label: - &quot;node=Master&quot; - &quot;k3s-001=Master&quot;etcd-snapshot-retention: 2# /var/lib/rancher/rke2/server/db/snapshots/etcd-snapshot-schedule-cron: &#x27;*/5 * * * *&#x27;","categories":[{"name":"Kubernetes","slug":"Kubernetes","permalink":"https://nfshanq.github.io/categories/Kubernetes/"}],"tags":[]}],"categories":[{"name":"mellanox","slug":"mellanox","permalink":"https://nfshanq.github.io/categories/mellanox/"},{"name":"golang","slug":"golang","permalink":"https://nfshanq.github.io/categories/golang/"},{"name":"Linux","slug":"Linux","permalink":"https://nfshanq.github.io/categories/Linux/"},{"name":"Command","slug":"Linux/Command","permalink":"https://nfshanq.github.io/categories/Linux/Command/"},{"name":"Virt","slug":"Linux/Virt","permalink":"https://nfshanq.github.io/categories/Linux/Virt/"},{"name":"Smart-NIC","slug":"Smart-NIC","permalink":"https://nfshanq.github.io/categories/Smart-NIC/"},{"name":"Kubernetes","slug":"Kubernetes","permalink":"https://nfshanq.github.io/categories/Kubernetes/"}],"tags":[{"name":"OpenWRT","slug":"OpenWRT","permalink":"https://nfshanq.github.io/tags/OpenWRT/"},{"name":"mellanox","slug":"mellanox","permalink":"https://nfshanq.github.io/tags/mellanox/"},{"name":"proxy_arp","slug":"proxy-arp","permalink":"https://nfshanq.github.io/tags/proxy-arp/"},{"name":"Linux Common Command","slug":"Linux-Common-Command","permalink":"https://nfshanq.github.io/tags/Linux-Common-Command/"},{"name":"virt","slug":"virt","permalink":"https://nfshanq.github.io/tags/virt/"},{"name":"Smart NIC","slug":"Smart-NIC","permalink":"https://nfshanq.github.io/tags/Smart-NIC/"}]}